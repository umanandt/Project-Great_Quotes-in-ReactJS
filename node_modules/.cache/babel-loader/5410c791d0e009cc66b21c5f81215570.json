{"ast":null,"code":"var _jsxFileName = \"D:\\\\Great Quotes\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport commentsList from \"../comments/CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const adddedCommentHandler = () => {\n    return loadedComments.id;\n  };\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n\n    if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n      comments = /*#__PURE__*/_jsxDEV(\"commentsList\", {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (status === 'completed' && (!loadedComments || loadedComments === 0)) {\n      comments = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centered\",\n        children: \" NO commengts were added yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: adddedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HHk6kBEjp3Kgl/TpNx7KuWB83GQ=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","commentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","error","data","loadedComments","startAddCommentHandler","adddedCommentHandler","id","comments","length"],"sources":["D:/Great Quotes/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport commentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments,\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const adddedCommentHandler = () => {\n    return loadedComments.id;\n  };\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        {\" \"}\n        <LoadingSpinner />\n      </div>\n    );\n\n    if (status === \"completed\" && (loadedComments && loadedComments.length > 0)) {\n      comments = <commentsList comments={loadedComments} />;\n    }\n\n    if(status === 'completed' && (!loadedComments || loadedComments === 0)){\n      comments = <p className='centered'> NO commengts were added yet!</p>\n    }\n  \n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={adddedCommentHandler}\n        />\n      )}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMW,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EACA,MAAM;IACJE,WADI;IAEJC,MAFI;IAGJC,KAHI;IAIJC,IAAI,EAAEC;EAJF,IAKFb,OAAO,CAACC,cAAD,CALX;;EAOA,MAAMa,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIAX,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,MAAMO,oBAAoB,GAAG,MAAM;IACjC,OAAOF,cAAc,CAACG,EAAtB;EACD,CAFD;;EAIA,IAAIC,QAAJ;;EACA,IAAIP,MAAM,KAAK,SAAf,EAA0B;IACxBO,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,WACG,GADH,eAEE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;;IAOA,IAAIP,MAAM,KAAK,WAAX,IAA2BG,cAAc,IAAIA,cAAc,CAACK,MAAf,GAAwB,CAAzE,EAA6E;MAC3ED,QAAQ,gBAAG;QAAc,QAAQ,EAAEJ;MAAxB;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;;IAED,IAAGH,MAAM,KAAK,WAAX,KAA2B,CAACG,cAAD,IAAmBA,cAAc,KAAK,CAAjE,CAAH,EAAuE;MACrEI,QAAQ,gBAAG;QAAG,SAAS,EAAC,UAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;EAEF;;EACD,oBACE;IAAS,SAAS,EAAEnB,OAAO,CAACmB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACZ,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAES,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGT,eAAe,iBACd,QAAC,cAAD;MACE,OAAO,EAAEE,MAAM,CAACC,OADlB;MAEE,cAAc,EAAEO;IAFlB;MAAA;MAAA;MAAA;IAAA,QARJ,eAaE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1DD;;GAAMX,Q;UAEWP,S,EAOXG,O;;;KATAI,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}