{"ast":null,"code":"var _jsxFileName = \"D:\\\\Great Quotes\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const adddedCommentHandler = () => {\n    return loadedComments.id;\n  };\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: adddedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"Gg7cl6qqr0pw9ROlS79AAhNUqzM=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","error","data","loadedComments","startAddCommentHandler","adddedCommentHandler","id","comments"],"sources":["D:/Great Quotes/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId} = params;\n  const { sendRequest, status, error, data: loadedComments } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(()=>{\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n  \n  const adddedCommentHandler = ()=>{\n          return loadedComments.id\n  }\n\n  let comments ;\n  if( status === 'pending'){\n   comments = <div className='centered'> <LoadingSpinner/></div>\n  }\n\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm   quoteId={params.quoteId} onAddedComment={adddedCommentHandler} />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMU,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAM;IAAEU;EAAF,IAAaD,MAAnB;EACA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,KAAvB;IAA8BC,IAAI,EAAEC;EAApC,IAAuDZ,OAAO,CAACC,cAAD,CAApE;;EAEA,MAAMY,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIAV,SAAS,CAAC,MAAI;IACZa,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,MAAMO,oBAAoB,GAAG,MAAI;IACzB,OAAOF,cAAc,CAACG,EAAtB;EACP,CAFD;;EAIA,IAAIC,QAAJ;;EACA,IAAIP,MAAM,KAAK,SAAf,EAAyB;IACxBO,QAAQ,gBAAG;MAAK,SAAS,EAAC,UAAf;MAAA,6BAA2B,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACA;;EAGD,oBACE;IAAS,SAAS,EAAElB,OAAO,CAACkB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACZ,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAES,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGT,eAAe,iBAAI,QAAC,cAAD;MAAkB,OAAO,EAAEE,MAAM,CAACC,OAAlC;MAA2C,cAAc,EAAEO;IAA3D;MAAA;MAAA;MAAA;IAAA,QAPtB,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CApCD;;GAAMX,Q;UAEWN,S,EAE8CG,O;;;KAJzDG,Q;AAsCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}