{"ast":null,"code":"var _jsxFileName = \"D:\\\\Great Quotes\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const adddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  let comments;\n\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n\n    if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n      comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (status === \"completed\" && (!loadedComments || loadedComments === 0)) {\n      comments = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centered\",\n        children: \" No comments were added yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), comments, !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: adddedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"gBItep67fRS2AJVFaLw48Bg2qoE=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useCallback","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","adddedCommentHandler","comments","length"],"sources":["D:/Great Quotes/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const adddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n    if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n      comments = <CommentsList comments={loadedComments} />;\n    }\n\n    if (status === \"completed\" && (!loadedComments || loadedComments === 0)) {\n      comments = <p className=\"centered\"> No comments were added yet!</p>;\n    }\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {comments}\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={adddedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMY,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAAEW;EAAF,IAAcD,MAApB;EACA,MAAM;IAAEE,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC;EAA7B,IAAgDZ,OAAO,CAACC,cAAD,CAA7D;;EAEA,MAAMY,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIAZ,SAAS,CAAC,MAAM;IACde,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;EAIA,MAAMM,oBAAoB,GAAGlB,WAAW,CAAC,MAAM;IAC7Ca,WAAW,CAACD,OAAD,CAAX;EACD,CAFuC,EAErC,CAACA,OAAD,EAAUC,WAAV,CAFqC,CAAxC;EAIA,IAAIM,QAAJ;;EACA,IAAIL,MAAM,KAAK,SAAf,EAA0B;IACxBK,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;;IAMA,IAAIL,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACI,MAAf,GAAwB,CAAxE,EAA2E;MACzED,QAAQ,gBAAG,QAAC,YAAD;QAAc,QAAQ,EAAEH;MAAxB;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;;IAED,IAAIF,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,KAAK,CAAjE,CAAJ,EAAyE;MACvEG,QAAQ,gBAAG;QAAG,SAAS,EAAC,UAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAX;IACD;EACF;;EACD,oBACE;IAAS,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,QAFH,EAGG,CAACV,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEQ,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,EAQGR,eAAe,iBACd,QAAC,cAAD;MACE,OAAO,EAAEG,OADX;MAEE,cAAc,EAAEM;IAFlB;MAAA;MAAA;MAAA;IAAA,QATJ,EAcGC,QAdH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CApDD;;GAAMX,Q;UAEWP,S,EAEuCG,O;;;KAJlDI,Q;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}