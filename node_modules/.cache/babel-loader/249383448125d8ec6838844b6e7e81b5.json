{"ast":null,"code":"var _jsxFileName = \"D:\\\\Great Quotes\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 10 : -10;\n    } else {\n      ;\n      return quoteA.id < quoteB.id ? 10 : -10;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const Location = useLocation();\n  console.log(Location, \"here\");\n  const queryParams = new URLSearchParams(Location.search); // urlSearchparams is JS default class where we pass the querydata\n  // sort=asc   - now the variable queryParams has the valuesort = asc\n  // urlSearchParams is not react object\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`${Location.pathname}?sort=${isSortingAscending ? \"desc\" : 'asc'}`); //history.push(\"/quotes?sort=asc\");\n    // console.log(Location);\n    // here we have hard coded the sort-asc but we can make it dynamic\n    // history can help us change/navigate the url or page\n    // it is an important hook\n    // change and manage url using usehistory\n    // useLocation returns location object\n    // that is currently loaded\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"fxKDDVOLQ2xP8dmDeRkFEsw/k5M=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","Location","console","log","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"sources":["D:/Great Quotes/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) =>{\n  return quotes.sort((quoteA, quoteB) =>{\n  \n    if(ascending){\n     \n      return quoteA.id > quoteB.id ? 10 : -10;\n    }\n    else{\n     ;\n      return quoteA.id < quoteB.id ? 10 : -10;\n    }\n  });\n};\n\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const Location = useLocation();\n  console.log(Location, \"here\");\n  const queryParams = new URLSearchParams(Location.search);\n\n  // urlSearchparams is JS default class where we pass the querydata\n  // sort=asc   - now the variable queryParams has the valuesort = asc\n  // urlSearchParams is not react object\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes  = sortQuotes(props.quotes, isSortingAscending);\n\n\n  const changeSortingHandler = () => {\n    history.push(`${Location.pathname}?sort=${(isSortingAscending ? \"desc\" : 'asc')}`);\n    //history.push(\"/quotes?sort=asc\");\n\n   // console.log(Location);\n    // here we have hard coded the sort-asc but we can make it dynamic\n    // history can help us change/navigate the url or page\n    // it is an important hook\n    // change and manage url using usehistory\n    // useLocation returns location object\n    // that is currently loaded\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}{\" \"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAsB;EACvC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAmB;IAEpC,IAAGH,SAAH,EAAa;MAEX,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,EAAxB,GAA6B,CAAC,EAArC;IACD,CAHD,MAII;MACH;MACC,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,EAAxB,GAA6B,CAAC,EAArC;IACD;EACF,CAVM,CAAP;AAWD,CAZD;;AAeA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGb,UAAU,EAA1B;EACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B;EACAc,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,MAAtB;EACA,MAAMG,WAAW,GAAG,IAAIC,eAAJ,CAAoBJ,QAAQ,CAACK,MAA7B,CAApB,CAJ2B,CAM3B;EACA;EACA;;EAEA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;EAEA,MAAMC,YAAY,GAAIlB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAee,kBAAf,CAAhC;;EAGA,MAAMG,oBAAoB,GAAG,MAAM;IACjCV,OAAO,CAACW,IAAR,CAAc,GAAEV,QAAQ,CAACW,QAAS,SAASL,kBAAkB,GAAG,MAAH,GAAY,KAAO,EAAhF,EADiC,CAEjC;IAED;IACC;IACA;IACA;IACA;IACA;IACA;EACD,CAXD;;EAYA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEjB,OAAO,CAACuB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEH,oBAAjB;QAAA,oBACQH,kBAAkB,GAAG,YAAH,GAAkB,WAD5C,EACyD,GADzD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEjB,OAAO,CAACwB,IAAvB;MAAA,UACGL,YAAY,CAACM,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAACnB,EAFZ;QAGE,MAAM,EAAEmB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAACnB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA9CD;;GAAMC,S;UACYX,U,EACCC,W;;;KAFbU,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}